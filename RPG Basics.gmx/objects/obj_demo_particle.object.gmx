<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spr = noone;
// runonce variable
runonce = 0;

// Rotational Vairable
rotation = 0;

// Fade Variables
alpha = 1;

// Color Variables
current_color = c_white;
current_color_fade = 0;

speed_sub = 0.05;
current_speed_subtract = speed_sub;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// runonce
if (runonce == 0) {
    // Give the particle motion
    direction = random(360);
    spd = random_range(max_speed,min_speed);
    motion_set(direction,spd);
    // Give the particle life within a range
    life = irandom_range(max_life, min_life);
    // Give the particle a random spin speed based off the one provided
    spin_speed = irandom(spin);
    // Give the particle a random fade speed based off the one provided
    fading = random(fade_amt);
    // Give the particle a random blend speed based off the one provided
    fader = random(color_fader);
    runonce = 1;
}
// Implode the sprite
if (implode == 1) {
    if (spd &gt; 0) motion_set(direction,spd);     // Normal, explode outward
    if (spd &lt; 0) {
        move_towards_point(center_x, center_y, -spd);                               // Move towards the center of the sprite
        if (point_distance(x,y, center_x, center_y) &lt; abs(spd)) instance_destroy(); // If were close to the center, destroy
    }
    spd = spd - current_speed_subtract;     // Make the speed slower and slower until negative
    current_speed_subtract += speed_sub;    // Make the amount subtracted from the speed higher
}


// Life
if (life &lt;= 0) {
    instance_destroy();
} else {
    life--;
}

// Rotate the particle
rotation += spin_speed;

// Fade the particle
if (fade == 1) {
    alpha -= fading;                    // take away from the alpha value
    if (alpha &lt;= 0) instance_destroy(); // If you cant see the particle, destroy it
}

// Blend the Colors
if (fade_to_color == 1) {
    current_color = merge_color(c_white, end_color, current_color_fade);    // Make the color
    current_color_fade += fader;                                            // Add to the blend amt
    if (current_color_fade &gt;= 1) current_color_fade = 1;                    // Cap the blend amount
    if (current_color_fade &lt;= 0) current_color_fade = 0;                    // Cap the blend amount
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw the sprite
draw_sprite_general(spr, -1, xx, yy, w_size, h_size, x, y, image_xscale, image_yscale, rotation, current_color, current_color, current_color, current_color, alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
