<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Shrink
scale = 1;

// Make particle float up
grav = 1;

// Fade patticle
start_alpha = 0;
alpha = start_alpha;

// Asymble Speed
spd = 0;
timer = 0;

// Current Rotation
rotate = irandom(600);
rotation = rotate;

// Run Once (extra create events basically)
runonce = 0;
runonce1 = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Init the timer
if (runonce1 == 0) {
    timer2 = (spd - timeleft);  // time until particle becomes alive
}
runonce1 = 1;   // Turn off the runonce1 variable

if (timer2 &lt; 0) {

    // Init some of the calculations
    if (runonce == 0) {
        // Calculate the correct speed for the distance needed to travel
        var dist = point_distance(x,y,end_x, end_y);
        distance_speed = (dist / timeleft);
        move_towards_point(end_x, end_y, distance_speed);
        
        // Calculate the rotate speed for the particle rotation to equal 0 at the end of the timeleft
        rotate_speed = (rotate / timeleft);
        
        // Calculate the alpha speed for the particle to be visible at the end of the time left.
        alpha_speed = (1 / timeleft);
    }
    runonce = 1;    // Turn off the runonce
    
    // If the particle is close to the end position, snap it to the end position and set speed to 0
    if (point_distance(x,y, end_x, end_y) &lt; distance_speed) {
        speed = 0;
        x = end_x;
        y = end_y;
    }
    
    // If the time is up, delete all of the particles and create the player
    if (timer &gt;= spd) {
        instance_create(obj_end_x, obj_end_y, obj);     // Create player
        with (obj_asymble_particle) instance_destroy(); // Destroy remaining particles
    } else {
        timer++; // Increment timer
    }
    
    // Add to the rotation
    rotation = rotation - rotate_speed;
    
    // Add to the alpha
    alpha = alpha + alpha_speed;
    
} else {
    timer2--;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw the sprite
draw_sprite_general(spr, -1, xx, yy, size, size, x, y, scale, scale, rotation, c_white, c_white, c_white, c_white, alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
