<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Changeable Variables
max_life = 30;
min_life = 10;
max_speed = 10;
min_speed = 5;
max_peice_size = 30;
min_peice_size = 10;
spin = 5;
fade = 0;
fade_amt = 0;
fade_to_color = 1;
end_color = 0;
end_color_display = c_white;
color_fade_speed = 0;
implode = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check_pressed(ord("Q"))) max_life++;
if (keyboard_check_pressed(ord("A"))) max_life--;

if (keyboard_check_pressed(ord("W"))) min_life++;
if (keyboard_check_pressed(ord("S"))) min_life--;

if (keyboard_check_pressed(ord("E"))) max_speed++;
if (keyboard_check_pressed(ord("D"))) max_speed--;

if (keyboard_check_pressed(ord("R"))) min_speed++;
if (keyboard_check_pressed(ord("F"))) min_speed--;

if (keyboard_check_pressed(ord("T"))) max_peice_size++;
if (keyboard_check_pressed(ord("G"))) max_peice_size--;

if (keyboard_check_pressed(ord("Y"))) min_peice_size++;
if (keyboard_check_pressed(ord("H"))) min_peice_size--;

if (keyboard_check_pressed(ord("U"))) spin++;
if (keyboard_check_pressed(ord("J"))) spin--;

if (keyboard_check_pressed(ord("I"))) fade++;
if (keyboard_check_pressed(ord("K"))) fade--;

if (keyboard_check_pressed(ord("O"))) fade_amt += 0.01;
if (keyboard_check_pressed(ord("L"))) fade_amt -= 0.01;

if (keyboard_check_pressed(ord("Z"))) fade_to_color++;
if (keyboard_check_pressed(ord("X"))) fade_to_color--;

if (keyboard_check_pressed(ord("C"))) end_color++;
if (keyboard_check_pressed(ord("V"))) end_color--;

if (keyboard_check_pressed(ord("B"))) color_fade_speed += 0.01;
if (keyboard_check_pressed(ord("N"))) color_fade_speed -= 0.01;

if (keyboard_check_pressed(ord("M"))) {
    implode *= -1;
} 


// END COLOR
if (end_color == 0) end_color_display = c_white;
if (end_color == 1) end_color_display = c_aqua;
if (end_color == 2) end_color_display = c_black;
if (end_color == 3) end_color_display = c_blue;
if (end_color == 4) end_color_display = c_dkgray;
if (end_color == 5) end_color_display = c_fuchsia;
if (end_color == 6) end_color_display = c_gray;
if (end_color == 7) end_color_display = c_green;
if (end_color == 8) end_color_display = c_lime;
if (end_color == 9) end_color_display = c_ltgray;
if (end_color == 10) end_color_display = c_maroon;
if (end_color == 11) end_color_display = c_navy;
if (end_color == 12) end_color_display = c_olive;
if (end_color == 13) end_color_display = c_orange;
if (end_color == 14) end_color_display = c_purple;
if (end_color == 15) end_color_display = c_red;
if (end_color == 16) end_color_display = c_silver;
if (end_color == 17) end_color_display = c_teal;
if (end_color == 18) end_color_display = c_yellow;


// Capping
if (fade_to_color &gt; 1) fade_to_color = 1;
if (fade_to_color &lt; 0) fade_to_color = 0;

if (fade &gt; 1) fade = 1;
if (fade &lt; 0) fade = 0;

if (max_life &lt; 0) max_life = 0;
if (min_life &lt; 0) min_life = 0;

if (max_peice_size &lt; 5) max_peice_size = 5;
if (min_peice_size &lt; 5) min_peice_size = 5;

if (end_color &lt; 0) end_color = 0;
if (end_color &gt; 18) end_color = 18;

if (fade_amt &lt; 0) fade_amt = 0;
if (color_fade_speed &lt; 0) color_fade_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(mouse_x,mouse_y,obj_demo_player);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(0,0,"(Q &amp; A) MAX LIFE: " +string(max_life));
draw_text(0,15,"(W &amp; S) MIN LIFE: " +string(min_life));
draw_text(0,30,"(E &amp; D) MAX SPEED: " +string(max_speed));
draw_text(0,45,"(R &amp; F) MIN SPEED: " +string(min_speed));
draw_text(0,60,"(T &amp; G) MAX PEICE SIZE: " +string(max_peice_size));
draw_text(0,75,"(Y &amp; H) MIN PEICE SIZE: " +string(min_peice_size));
draw_text(0,90,"(U &amp; J) SPIN: " +string(spin));
draw_text(0,105,"(I &amp; K) FADE: " +string(fade));
draw_text(0,120,"(O &amp; L) FADE AMT: " +string(fade_amt));
draw_text(0,135,"(Z &amp; X) FADE TO COLOR: " +string(fade_to_color));
draw_text(0,150,"(C &amp; V) END COLOR: " +string(end_color_display));
draw_text(0,165,"(B &amp; N) COLOR FADE SPEED: " +string(color_fade_speed));
draw_text(0,180,"(M) IMPLODE: " +string(implode));

draw_text(0,200,"SPACE TO EXPLODE");
draw_text(0,215,"LEFT CLICK TO CREATE NEW OBJECT");
draw_text(0,230,"OBJECT COUNT: " +string(instance_count));
draw_text(0,245,"REAL FPS: " +string(fps_real));

draw_text(8,780,"If you like this asset, please give it a rate and if you have any suggestions let me know!")
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
